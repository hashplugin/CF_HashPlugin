<?php
/*
Plugin Name: WP Contact Data
Description: A plugin to receive and display contact data on the dashboard, including data from an external API.
Version: 1.2
Author: salman
*/

// Exit if accessed directly.
if (!defined('ABSPATH')) {
    exit;
}

// Register the menu item and admin page.
add_action('admin_menu', 'wp_contact_data_menu');

function wp_contact_data_menu() {
    add_menu_page(
        'Contact Data',       // Page title
        'Contact Data',       // Menu title
        'manage_options',     // Capability
        'contact-data',       // Menu slug
        'wp_contact_data_page', // Function to display the page
        'dashicons-admin-users', // Icon
        6                     // Position
    );
}

function wp_contact_data_page() {
    // Check if user is allowed access
    if (!current_user_can('manage_options')) {
        return;
    }

    // Display the contact data table
    echo '<div class="wrap">';
    echo '<h1>Contact Data</h1>';
    echo '<table class="wp-list-table widefat fixed striped">';
    echo '<thead><tr><th>Name</th><th>Email</th><th>Phone</th><th>Message</th></tr></thead>';
    echo '<tbody>';

    // Fetch data from the database
    global $wpdb;
    $table_name = $wpdb->prefix . 'contact_data';
    $results = $wpdb->get_results("SELECT * FROM $table_name");

    foreach ($results as $row) {
        echo '<tr>';
        echo '<td>' . esc_html($row->name) . '</td>';
        echo '<td>' . esc_html($row->email) . '</td>';
        echo '<td>' . esc_html($row->phone) . '</td>';
        echo '<td>' . esc_html($row->message) . '</td>';
        echo '</tr>';
    }

    echo '</tbody></table>';
    echo '</div>';
}

// Fetch data from the API
function wp_fetch_contact_data_from_api() {
    $response = wp_remote_get('https://api.example.com/contacts'); // Replace with your API URL
    if (is_wp_error($response)) {
        return;
    }

    $body = wp_remote_retrieve_body($response);
    $data = json_decode($body, true);

    if (!empty($data)) {
        global $wpdb;
        $table_name = $wpdb->prefix . 'contact_data';

        foreach ($data as $contact) {
            $wpdb->insert(
                $table_name,
                [
                    'name' => sanitize_text_field($contact['name']),
                    'email' => sanitize_email($contact['email']),
                    'phone' => sanitize_text_field($contact['phone']),
                    'message' => sanitize_textarea_field($contact['message']),
                ]
            );
        }
    }
}

// Activate plugin and create database table
register_activation_hook(__FILE__, 'wp_contact_data_install');

function wp_contact_data_install() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'contact_data';

    $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE $table_name (
        id mediumint(9) NOT NULL AUTO_INCREMENT,
        name tinytext NOT NULL,
        email text NOT NULL,
        phone text NOT NULL,
        message text NOT NULL,
        PRIMARY KEY  (id)
    ) $charset_collate;";

    require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
    dbDelta($sql);
}

// Register form shortcode
add_shortcode('contact_form', 'wp_contact_form');

function wp_contact_form() {
    ob_start();
    ?>
    <form action="<?php echo esc_url(admin_url('admin-post.php')); ?>" method="POST">
        <input type="hidden" name="action" value="submit_contact_form">
        <p>
            <label for="name">Name</label>
            <input type="text" name="name" required>
        </p>
        <p>
            <label for="email">Email</label>
            <input type="email" name="email" required>
        </p>
        <p>
            <label for="phone">Phone</label>
            <input type="text" name="phone" required>
        </p>
        <p>
            <label for="message">Message</label>
            <textarea name="message" required></textarea>
        </p>
        <p>
            <input type="submit" value="Submit">
        </p>
    </form>
    <?php
    return ob_get_clean();
}

// Handle form submission
add_action('admin_post_nopriv_submit_contact_form', 'wp_handle_contact_form');
add_action('admin_post_submit_contact_form', 'wp_handle_contact_form');

function wp_handle_contact_form() {
    if (isset($_POST['name']) && isset($_POST['email']) && isset($_POST['phone']) && isset($_POST['message'])) {
        global $wpdb;
        $table_name = $wpdb->prefix . 'contact_data';

        $wpdb->insert(
            $table_name,
            [
                'name' => sanitize_text_field($_POST['name']),
                'email' => sanitize_email($_POST['email']),
                'phone' => sanitize_text_field($_POST['phone']),
                'message' => sanitize_textarea_field($_POST['message']),
            ]
        );
    }
    wp_redirect(home_url());
    exit;
}

// Register REST API route with authentication
add_action('rest_api_init', function () {
    register_rest_route('wp-contact-data/v1', '/submit', [
        'methods' => 'POST',
        'callback' => 'wp_handle_rest_contact_form',
        'permission_callback' => function () {
            return is_user_logged_in();
        },
    ]);
});

function wp_handle_rest_contact_form(WP_REST_Request $request) {
    // Verify if the user has correct permissions
    if (!current_user_can('edit_posts')) {
        return new WP_REST_Response('Unauthorized', 403);
    }

    $params = $request->get_json_params();

    if (isset($params['name']) && isset($params['email']) && isset($params['phone']) && isset($params['message'])) {
        global $wpdb;
        $table_name = $wpdb->prefix . 'contact_data';

        $wpdb->insert(
            $table_name,
            [
                'name' => sanitize_text_field($params['name']),
                'email' => sanitize_email($params['email']),
                'phone' => sanitize_text_field($params['phone']),
                'message' => sanitize_textarea_field($params['message']),
            ]
        );

        return new WP_REST_Response('Contact data saved successfully.', 200);
    }

    return new WP_REST_Response('Invalid data.', 400);
}
